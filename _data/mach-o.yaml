---
segments:
  __TEXT:
    description: The text region contains any executable code (in the machine code
      of the platform for this binary) and therefore will always be a read-only (write
      protected) region of memory when mapped into a process.  (r-x)
    __text:
      description: Generic code region.  This area will have the execute flag set
        on it's content
    __const:
      description: Constant variables. This region will be non-execute on platforms
        that support execute never, DEP or NX concepts.  See `__DATA_CONST.__const`
    __cstring:
      description: ASCII strings null terminated.  This region can be split on `\0`
        into strings.
    __os_log:
      description: Specific support for Apple OSLog facility containing the patterns
        used
    __eh_frame:
      description: Execption handling frame
    __stubs:
      description: Locations that text calls that initially point to a helper thunk (see __stub_helper) but will be
        late bound to the dynamic symbol
    __stub_helper:
      description: A helper function that when called binds the prior call site to the proper dyld import
    __info_plist:
      description:
    __unwind_info:
      description: Information to help debuggers / exception handlers unwind the stack (info about prolouge etc)
        allowing for parts of the stack to remain a compiler implementation detail.
    __auth_stubs:
      description:
    __init_offsets:
      description:
    __objc_methlist:
      description:
    __gcc_except_tab:
      description: GCC exception handler table
    __objc_classname:
      description: A collection of strings that provide the names for Objective-C classes in this object file
    __objc_methname:
      description: A colleciton of strings that provide the names of Objective-C methods for a given class (selectors)
    __objc_methtype:
      description:
  __DATA:
    description: Mutable data region (rw-)
    __data:
      description: General purpose mutable data region
    __lock_grp:
      description:
    __percpu:
      description: Local storage per CPU allowing for lock free globals
    __llvm_prf_cnts:
      description:
    __llvm_prf_data:
      description:
    __llvm_prf_names:
      description:
    __llvm_prf_vnds:
      description:
    __llvm_orderfile:
      description:
    __sdt_cstring:
      description:
    __sdt:
      description:
    __common:
      description:
    __bss:
      description:
    __got:
      description: Global Object Table
    __mod_init_func:
      description: Module initializer function (called at load)
    __mod_term_func:
      description: Module termination function (called at unload)
    __const:
      description: Constant data, no longer in common usage, see __DATA_CONST.__const
    __nl_symbol_ptr:
      description:
    __la_symbol_ptr:
      description:
    __objc_imageinfo:
      description:
    __objc_selrefs:
      description:
    __objc_classrefs:
      description:
    __objc_superrefs:
      description:
    __objc_ivar:
      description: ObjC instance variables (ivar)
  __DATA_CONST:
    description: Immutable data region (r--)
    __got:
      description: Global Object Table
    __mod_init_func:
      description: Module initializer function
    __const:
      description: Constant initialized data
    __kalloc_type:
      description:
    __objc_classlist:
      description: List of ObjC classes exported
    __objc_protolist:
      description: List of ObjC protocols (like interfaces)
    __objc_imageinfo:
      description:
    __objc_const:
      description: Constant ObjC data
  __KLDDATA:
    description: Data region for KLD or kernel linker
    __init:
      description:
    __init_entry_set:
      description:
    __cstring:
      description: C-Style (null terminated) strings for the kernel linker
    __const:
      description: Constant data
    __mod_init_func:
      description: Module initializer funtion
    __mod_term_func:
      description: Module termination function
    __bss:
      description: Initialized data
  __HIB:
    description: Hardware specific information for coming out of hibernation.  This section is solely responsable for
      ensuring that the sleepimage is restored.  Note that it all operates at the same protection levels (code, const,
      and data) and therefore doesn't take advantage of some hardware protections.
    __text:
      description: Executable code used to pull a machine out of hibernation
    __bootPT:
      description: Initial page table for use during boot up from a hibernation for protected mode
    __desc:
      description:
    __data:
      description: General purpose data region for hibernation restore
    __const:
      description: Constant data
    __cstring:
      description: C-Style strings for the sleep image restore function
    __bss:
      description: Initialized mutable data
    __common:
      description:
  __VECTORS:
    description: Vector table.  Often used to configure a kernel / coprocessor for reset, exception etc.  See ARM-M
      profile for an example
    __recover:
      description:
  __KLD:
    description: The kernel linker (used to dynamiclly bind a kernel extension) analagous to dyld in user-mode
    __text:
      description: The executable code for the kernel linker
  __LASTDATA_CONST:
    description: Last exported symbol from the const region of the kernel or object
    __mod_init_func:
      description: Module initialization function
  __LAST:
    description: Segment that contains the last kernel symbol exported
    __last:
      description: Contains `_last_kernel_symbol` which is the last exported kernel symbol
  __PRELINK_TEXT:
    description: A region of executable code that is the combination of multiple linkable objects having been prebound
    __text:
      description: The prelinked, executable code region
  __PRELINK_INFO:
    description: Descriptive information about the prelinked region of this object
    __info:
      description:
  __LINKINFO:
    description:
    __symbolsets:
      description:
  __CTF:
    description: Compact C Type Format
    __ctf:
      description:
  __LINKEDIT:
    description:
  __TEXT_EXEC:
    description:
  __PAGEZERO:
    description: A dummy page used to mark addresses at low memory as not readable.  This causes a dereference of a low
      integer to cause a page fault helping not propogate type errors when casting pointers.
  __AUTH_CONST:
    description: Used by arm64e pointer authentication codes (PAC) and read only
    __const:
      description:
    __auth_got:
      description: Authenticated Global Object Table
    __cfstring:
      description: Authenticated CoreFoundation strings
    __auth_ptr:
      description:
    __objc_const:
      description:
    __got:
      description: Global Object Table
  __AUTH:
    description: Used by arm64e for pointer authenticaton codes (PAC) mutable data
    __data:
      description: General purpose PAC authenticated data
    __objc_data:
      description: ObjC specific PAC authenticated data
  __OBJC_CONST:
    description: A region of Objective-C metadata that is read-only
    __objc_class_ro:
      description: ObjC class info that is read-only to prevent runtime tampering (swizzling for example)
commands:
  LC_SEGMENT:
    description:
    value: 1
  LC_SYMTAB:
    description:
    value: 2
  LC_SYMSEG:
    description:
    value: 3
  LC_THREAD:
    description:
    value: 4
  LC_UNIXTHREAD:
    description:
    value: 5
  LC_LOADFVMLIB:
    description:
    value: 6
  LC_IDFVMLIB:
    description:
    value: 7
  LC_IDENT:
    description:
    value: 8
  LC_FVMFILE:
    description:
    value: 9
  LC_PREPAGE:
    description:
    value: 10
  LC_DYSYMTAB:
    description:
    value: 11
  LC_LOAD_DYLIB:
    description:
    value: 12
  LC_ID_DYLIB:
    description:
    value: 13
  LC_LOAD_DYLINKER:
    description:
    value: 14
  LC_ID_DYLINKER:
    description:
    value: 15
  LC_PREBOUND_DYLIB:
    description:
    value: 16
  LC_ROUTINES:
    description:
    value: 17
  LC_SUB_FRAMEWORK:
    description:
    value: 18
  LC_SUB_UMBRELLA:
    description:
    value: 19
  LC_SUB_CLIENT:
    description:
    value: 20
  LC_SUB_LIBRARY:
    description:
    value: 21
  LC_TWOLEVEL_HINTS:
    description:
    value: 22
  LC_PREBIND_CKSUM:
    description:
    value: 23
  LC_LOAD_WEAK_DYLIB:
    description:
    value: 2147483672
  LC_SEGMENT_64:
    description:
    value: 25
  LC_ROUTINES_64:
    description:
    value: 26
  LC_UUID:
    description:
    value: 27
  LC_RPATH:
    description:
    value: 2147483676
  LC_CODE_SIGNATURE:
    description:
    value: 29
  LC_SEGMENT_SPLIT_INFO:
    description:
    value: 30
  LC_REEXPORT_DYLIB:
    description:
    value: 2147483679
  LC_LAZY_LOAD_DYLIB:
    description:
    value: 32
  LC_ENCRYPTION_INFO:
    description:
    value: 33
  LC_DYLD_INFO:
    description:
    value: 34
  LC_DYLD_INFO_ONLY:
    description:
    value: 2147483682
  LC_LOAD_UPWARD_DYLIB:
    description:
    value: 2147483683
  LC_VERSION_MIN_MACOSX:
    description:
    value: 36
  LC_VERSION_MIN_IPHONEOS:
    description:
    value: 37
  LC_FUNCTION_STARTS:
    description:
    value: 38
  LC_DYLD_ENVIRONMENT:
    description:
    value: 39
  LC_MAIN:
    description:
    value: 2147483688
  LC_DATA_IN_CODE:
    description:
    value: 41
  LC_SOURCE_VERSION:
    description:
    value: 42
  LC_DYLIB_CODE_SIGN_DRS:
    description:
    value: 43
  LC_ENCRYPTION_INFO_64:
    description:
    value: 44
  LC_LINKER_OPTION:
    description:
    value: 45
  LC_LINKER_OPTIMIZATION_HINT:
    description:
    value: 46
  LC_VERSION_MIN_TVOS:
    description:
    value: 47
  LC_VERSION_MIN_WATCHOS:
    description:
    value: 48
  LC_NOTE:
    description:
    value: 49
  LC_BUILD_VERSION:
    description:
    value: 50
  LC_DYLD_EXPORTS_TRIE:
    description:
    value: 2147483699
  LC_DYLD_CHAINED_FIXUPS:
    description:
    value: 2147483700
  LC_FILESET_ENTRY:
    description:
    value: 2147483701
